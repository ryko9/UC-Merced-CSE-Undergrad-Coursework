Lab 9 Logic Check:

1.) The Counter class doesn't need a constructor because Java provides an empty constructor by default if there isn't one.
2.) The Counter class doesn't have a main method because we are using the Runner class to test.
3.) The keyword is 'extends Counter'.
4.) The constructor inside the ModNCounter class is 

public ModNCounter(int n)
{
	cycleLength = n;
}

5.) The cycleLength variable is not visible to the parent class because the parent class can only see variables/methods that the subclass inherits.
6.) If we call value and reset methods for ModNCounter it uses the value and reset methods from Counter since they have not been defined in ModNCounter. Value gives the
value of myCount, and reset sets the value of myCount to 0.
7.) Calling increment and reset uses the increment and reset methods from Counter since they have not been defined in ModNCounter. Increment adds one to myCount, and
reset sets the value of myCount to 0.
8.) decrement does not exist inside counter.
9.) increment's behavior does not change because it is inherited from counter and is not defined in DecrementableCounter.
10.) toString is inherited from Object, the superclass of all classes.