David Wang
CSE140 HW4
collab w/ Jan Tanja

1.)

    a. The misses are compulsory misses because the miss rate is directly
       proportional to the block size. It is the first time being loaded,
       and 512K/ 32 = 16K misses.

    b. 16 byte block: 512/16 = 32K -> 1 /  = 12.5%
       64 byte block: 512/64 = 8K -> 1 /32 = 3.125%
       128 byte block: 512/128 = 4K -> 1/64 = 1.5625%

    c. Next-line prefetching minimalizes the miss rate to almost 0

2.
    a. 

    block size = memory - stall (missrate) * (misspenalty) //20 * B

    8      = 1.35 * 4% * (20 * 8) = 8.64 min, optimal block
    
    size
    
    16     = 1.35 * 3% * (20 * 16) = 12.96
    32     = 1.35 * 2% * (20 * 32) = 17.28
    64     = 1.35 * 1.5% * (20 * 64) = 25.92
    128    = 1.35 * 1% * (20 * 128) = 34.56

    b.

    block size = memory stall (missrate) * (misspenalty) //20 + B

    8      = 1.35 * 4% = 0.054
    16     = 1.35 * 3% = 0.0405
    32     = 1.35 * 2% = 0.027
    64     = 1.35 * 1.5% = 0.02025
    128    = 1.35 * 1% = 0.135 // min

3.

    clock rate = 1/(L1 hit time)

    P1: (92%)(0.66 ns) + (8%)(70 ns) = 6.2072
    P2: (94%)(0.9 ns) + (6%)(70 ns) = 5.046

    c. 

        Miss cycles = (IC)(Mem Access Freq)(Miss Rate)(Miss Penalty)
        Miss cycles = (IC)(Mem Access Freq)(Miss Rate)(Main Memory Access/L1 Hit Time)
        Total Cycles = (1.0)(IC) + Miss Cycles
        CPU Time w/ Stalls = (IC)(CPI)(Clock Cycle) = (IC)(CPI)(L1 Hit Time)

        P1:
        Miss cycles: IC * (0.36) * (0.08) * (70/0.66) = 3.05 * IC
        Total cycles = (1.0) * IC + Miss Cycles = 4.05 * IC
        CPI = Total Cycles / Instruction Count = 4.05
        CPU time w stalls = (4.05)(0.66) = IC * 2.63ns

        P2:
        Miss cycles: IC * (0.36) * (0.06) * (70/0.9) = 1.68 * IC
        Total cycles = (1.0) * IC + Miss Cycles = 2.68 * IC
        CPI = Total cycles / instruction count = 2.68
        CPU time w stalls = (2.68)(0.9) = IC * 2.41 ns

        2.41 ns is faster than 2.63, thus P2 is faster

        d. 

            AMAT L2 = Hit rate L2 * Hit time L2 + Miss rate L2 * Miss Time L2
            
            (0.05) * (5.62 ns) + (0.95) * 70ns = 66.781 ns

            AMAT L1 = Hit rate L1 * Hit time L1 + Miss rate L1 * Miss Time L1

            (0.08) * (0.66ns) + (0.92) * 66.781 ns = 61.49 ns

        e.

            Miss cycles: IC * (0.36) * (0.06) * (61.49) = 1.32 * IC
            Total cycles: (1.0) * IC + Miss cycles = 2.32 * IC
            CPI = Total cycles / Instruction Count = 2.32

        f.
            P1 with L2 cache is faster since P2's hit rate isn't as high.


4. 

    a & b)
Address of mem block    Binary Address       Hit/Miss            Contents of cache after ref
                                                        B0      B1      B2      B3      B4      B5      B6      B7
    3                   0000 0011           M           M[3]*            
    180                 1011 0100           M           M[3]    M[180]*  
    43                  0010 1011           M           M[3]    M[180]  M[83]*   
    2                   0000 0010           M           M[3]    M[180]  M[83]   M[2]*
    191                 1011 1111           M           M[3]    M[180]  M[83]   M[2]    M[191]*
    88                  0101 1000           M           M[3]    M[180]  M[83]   M[2]    M[191]  M[88]*
    190                 1011 1110           M           M[3]    M[180]  M[83]   M[2]    M[191]  M[88]   M[190]*  
    14                  0000 1110           M           M[3]    M[180]  M[83]   M[2]    M[191]  M[88]   M[190]  M[14]*
    181                 1011 0101           M           M[181]  M[180]  M[83]   M[2]    M[191]  M[88]   M[190]  M[14]
    44                  0010 1100           M           M[181]  M[44]   M[83]   M[2]    M[191]  M[88]   M[190]  M[14]
    186                 1011 1010           M           M[181]  M[44]   M[186]  M[2]    M[191]  M[88]   M[190]  M[14]
    253                 1111 1101           M           M[181]  M[44]   M[186]  M[253]  M[191]  M[88]   M[190]  M[14]

    c) 
        Miss rate (LRU replacement) = 100%
        Miss rate (MRU replacement) = 4/12 = 25%

5. 
    a) 
        1. First level cache: 
            CPItot = CPIbase + CPImem-stalls 
            CPImem-stalls = (L1miss) * (MemAcc)
            = 1.5 + 0.007 * 100ns * 2GHz = 1.5 + 0.07 * 200
            = 15.5
            Doubled: 1.5 + 0.07 * 200ns * 2GHz = 29.5
            Halved = 1.5 + 0.07 * 50ns * 2GHz = 8.5
        2. First level and second level directly-mapped cache
            CPItot = CPIbase + L1miss + L2access + L2miss * (memAcc)
            = 1.5 + 0.07 * 12 + 0.035 * 100ns * 2GHz = 9.34
            Doubled: 1.5 + 0.07 * 12 + 0.035 * 200ns * 2GHz = 16.34
            Halved: 1.5 + 0.07 * 12 + 0.035 * 50ns * 2GHz = 5.84
        3. First and second level eight-way associative cache
            CPItot = CPIbase + L1miss + L2access + L2miss * (memAcc)
            = 1.5 + 0.07 * 28 + 0.015 * 100ns * 2GHz = 6.46
            Doubled: 1.5 + 0.07 * 26 + 0.015 * 200ns * 2GHz = 9.46
            Halved: 1.5 + 0.07 * 28 + 0.015 * 50ns * 2GHz = 4.96


    b. 

    This would expend more overhead instead of increasing performance. It would be better to maintain the same processor instead of reducing global miss rate.

    c. 

    The cache would need more space for 512KiB of cache missed at a rate of 0.7%.

    (512 KiB) * 4% - [(512KiB) + n(0.7)] + 50

    An eight-way set associative cache requires MORE cycles.








