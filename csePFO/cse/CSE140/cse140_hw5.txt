David Wang
CSE 140

Homework 5

a.) The double for loop isn't reusing addresses, so we can use a larger block size to reduce the amount of compulsory misses.

b.)

total += sub_total/k
average = total/N

The k and N variables are switched. The outer loop shoud use a block size of >=2 words since the second and further iterations will all be hits. When the array is smaller, we will need a larger line size to reduce the amount of compulsory misses. When the array is bigger, the columns are taller so we need smaller line sizes to reduce the amount of conflict messages.

c.)

mult    $t0, $s1, $a1
add     $t1, $t0, $s0
lw      $a0, $t1($a0)
add     $t2, $0, $t2
add     $t2, $a0, $t2

d.)

Load data

1. Convert physical to virtual address
2. Splits the address into virtualk page number and virtual page offset to fetch
3. Virtual page number goes to TLB for translation into 31 bits
	i. Sends the VPN through translation to get the physical page number
	ii. Find V->P mapping 
4. Page offset goes to the cache, repeats for L2 cache
	i. Sends page offset to data cache
	ii. Accesses L1 Data cache
5. If lookup is a hit, returns physical page number to cache controller with the cache lookup sequence
6. Offset is unchanged, puts it back into the physical address and fetches from 2-level page table virtual memory
	i. Use tag bits for the upper part of the address during cache lookup
	ii. TLB hit = very fast
	iii. TLB miss = very slow
	iv. break if the PPN doesnt arrive in time
7. Loads the PC with value of instruction address for the beginning of the TLB miss handler

e.)

mult    $t0, $s1, $a1       // multiply j and N and save value into t0
add     $t1, $t0, $s0       // add $t0 and i, save into t1 for offset
lw      $a0, $t1($a0)       // load result from a0 offset by t1
add     $t2, $0, $t2        // initialize variable sub_total
add     $t2, $a0, $t2       // add variable sub_total to itself

f.)

L2 caches need to be skipped because it would increase the number of hits. It would be slow in the start, but be faster and use less cache capacity in the long run.