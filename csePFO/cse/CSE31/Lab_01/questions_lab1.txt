Q1) The -c flag compiles the file into a machine code file ".o"
Q2) The -o flag creates the executable which can be named   
Q3) gcc -g -o output0 output0.c
Q4) (gdb) break output0.c:main
Q5) (gdb) run
Q6) (gdb) s
Q7) unsigned int is 32 bits
Q8) long int is 64 bits
Q9) Yes
Q10) -2147483648

The number is still the same after negating it because the binary equivalent of -2147483648 is 1000 0000 0000 0000. Using two's complement to negate it,
we get 0111 1111 1111 1111 and then add 1. The 1 carries through all the 0's and you end up with 1000 0000 0000 0000 again. 